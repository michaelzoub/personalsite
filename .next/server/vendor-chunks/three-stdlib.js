"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/three-stdlib";
exports.ids = ["vendor-chunks/three-stdlib"];
exports.modules = {

/***/ "(ssr)/./node_modules/three-stdlib/controls/EventDispatcher.js":
/*!***************************************************************!*\
  !*** ./node_modules/three-stdlib/controls/EventDispatcher.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventDispatcher: () => (/* binding */ EventDispatcher)\n/* harmony export */ });\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nclass EventDispatcher {\n  constructor() {\n    // not defined in @types/three\n    __publicField(this, \"_listeners\");\n  }\n  /**\n   * Adds a listener to an event type.\n   * @param type The type of event to listen to.\n   * @param listener The function that gets called when the event is fired.\n   */\n  addEventListener(type, listener) {\n    if (this._listeners === void 0)\n      this._listeners = {};\n    const listeners = this._listeners;\n    if (listeners[type] === void 0) {\n      listeners[type] = [];\n    }\n    if (listeners[type].indexOf(listener) === -1) {\n      listeners[type].push(listener);\n    }\n  }\n  /**\n      * Checks if listener is added to an event type.\n      * @param type The type of event to listen to.\n      * @param listener The function that gets called when the event is fired.\n      */\n  hasEventListener(type, listener) {\n    if (this._listeners === void 0)\n      return false;\n    const listeners = this._listeners;\n    return listeners[type] !== void 0 && listeners[type].indexOf(listener) !== -1;\n  }\n  /**\n      * Removes a listener from an event type.\n      * @param type The type of the listener that gets removed.\n      * @param listener The listener function that gets removed.\n      */\n  removeEventListener(type, listener) {\n    if (this._listeners === void 0)\n      return;\n    const listeners = this._listeners;\n    const listenerArray = listeners[type];\n    if (listenerArray !== void 0) {\n      const index = listenerArray.indexOf(listener);\n      if (index !== -1) {\n        listenerArray.splice(index, 1);\n      }\n    }\n  }\n  /**\n      * Fire an event type.\n      * @param event The event that gets fired.\n      */\n  dispatchEvent(event) {\n    if (this._listeners === void 0)\n      return;\n    const listeners = this._listeners;\n    const listenerArray = listeners[event.type];\n    if (listenerArray !== void 0) {\n      event.target = this;\n      const array = listenerArray.slice(0);\n      for (let i = 0, l = array.length; i < l; i++) {\n        array[i].call(this, event);\n      }\n      event.target = null;\n    }\n  }\n}\n\n//# sourceMappingURL=EventDispatcher.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGhyZWUtc3RkbGliL2NvbnRyb2xzL0V2ZW50RGlzcGF0Y2hlci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSw4RUFBOEUsNkRBQTZEO0FBQzNJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MsT0FBTztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXG1pY2hhXFxEb3dubG9hZHNcXHpvdWJrb2Zmc2l0ZVxccGVyc29uYWxzaXRlXFxub2RlX21vZHVsZXNcXHRocmVlLXN0ZGxpYlxcY29udHJvbHNcXEV2ZW50RGlzcGF0Y2hlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19kZWZQcm9wID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIF9fZGVmTm9ybWFsUHJvcCA9IChvYmosIGtleSwgdmFsdWUpID0+IGtleSBpbiBvYmogPyBfX2RlZlByb3Aob2JqLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSwgdmFsdWUgfSkgOiBvYmpba2V5XSA9IHZhbHVlO1xudmFyIF9fcHVibGljRmllbGQgPSAob2JqLCBrZXksIHZhbHVlKSA9PiB7XG4gIF9fZGVmTm9ybWFsUHJvcChvYmosIHR5cGVvZiBrZXkgIT09IFwic3ltYm9sXCIgPyBrZXkgKyBcIlwiIDoga2V5LCB2YWx1ZSk7XG4gIHJldHVybiB2YWx1ZTtcbn07XG5jbGFzcyBFdmVudERpc3BhdGNoZXIge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICAvLyBub3QgZGVmaW5lZCBpbiBAdHlwZXMvdGhyZWVcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiX2xpc3RlbmVyc1wiKTtcbiAgfVxuICAvKipcbiAgICogQWRkcyBhIGxpc3RlbmVyIHRvIGFuIGV2ZW50IHR5cGUuXG4gICAqIEBwYXJhbSB0eXBlIFRoZSB0eXBlIG9mIGV2ZW50IHRvIGxpc3RlbiB0by5cbiAgICogQHBhcmFtIGxpc3RlbmVyIFRoZSBmdW5jdGlvbiB0aGF0IGdldHMgY2FsbGVkIHdoZW4gdGhlIGV2ZW50IGlzIGZpcmVkLlxuICAgKi9cbiAgYWRkRXZlbnRMaXN0ZW5lcih0eXBlLCBsaXN0ZW5lcikge1xuICAgIGlmICh0aGlzLl9saXN0ZW5lcnMgPT09IHZvaWQgMClcbiAgICAgIHRoaXMuX2xpc3RlbmVycyA9IHt9O1xuICAgIGNvbnN0IGxpc3RlbmVycyA9IHRoaXMuX2xpc3RlbmVycztcbiAgICBpZiAobGlzdGVuZXJzW3R5cGVdID09PSB2b2lkIDApIHtcbiAgICAgIGxpc3RlbmVyc1t0eXBlXSA9IFtdO1xuICAgIH1cbiAgICBpZiAobGlzdGVuZXJzW3R5cGVdLmluZGV4T2YobGlzdGVuZXIpID09PSAtMSkge1xuICAgICAgbGlzdGVuZXJzW3R5cGVdLnB1c2gobGlzdGVuZXIpO1xuICAgIH1cbiAgfVxuICAvKipcbiAgICAgICogQ2hlY2tzIGlmIGxpc3RlbmVyIGlzIGFkZGVkIHRvIGFuIGV2ZW50IHR5cGUuXG4gICAgICAqIEBwYXJhbSB0eXBlIFRoZSB0eXBlIG9mIGV2ZW50IHRvIGxpc3RlbiB0by5cbiAgICAgICogQHBhcmFtIGxpc3RlbmVyIFRoZSBmdW5jdGlvbiB0aGF0IGdldHMgY2FsbGVkIHdoZW4gdGhlIGV2ZW50IGlzIGZpcmVkLlxuICAgICAgKi9cbiAgaGFzRXZlbnRMaXN0ZW5lcih0eXBlLCBsaXN0ZW5lcikge1xuICAgIGlmICh0aGlzLl9saXN0ZW5lcnMgPT09IHZvaWQgMClcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICBjb25zdCBsaXN0ZW5lcnMgPSB0aGlzLl9saXN0ZW5lcnM7XG4gICAgcmV0dXJuIGxpc3RlbmVyc1t0eXBlXSAhPT0gdm9pZCAwICYmIGxpc3RlbmVyc1t0eXBlXS5pbmRleE9mKGxpc3RlbmVyKSAhPT0gLTE7XG4gIH1cbiAgLyoqXG4gICAgICAqIFJlbW92ZXMgYSBsaXN0ZW5lciBmcm9tIGFuIGV2ZW50IHR5cGUuXG4gICAgICAqIEBwYXJhbSB0eXBlIFRoZSB0eXBlIG9mIHRoZSBsaXN0ZW5lciB0aGF0IGdldHMgcmVtb3ZlZC5cbiAgICAgICogQHBhcmFtIGxpc3RlbmVyIFRoZSBsaXN0ZW5lciBmdW5jdGlvbiB0aGF0IGdldHMgcmVtb3ZlZC5cbiAgICAgICovXG4gIHJlbW92ZUV2ZW50TGlzdGVuZXIodHlwZSwgbGlzdGVuZXIpIHtcbiAgICBpZiAodGhpcy5fbGlzdGVuZXJzID09PSB2b2lkIDApXG4gICAgICByZXR1cm47XG4gICAgY29uc3QgbGlzdGVuZXJzID0gdGhpcy5fbGlzdGVuZXJzO1xuICAgIGNvbnN0IGxpc3RlbmVyQXJyYXkgPSBsaXN0ZW5lcnNbdHlwZV07XG4gICAgaWYgKGxpc3RlbmVyQXJyYXkgIT09IHZvaWQgMCkge1xuICAgICAgY29uc3QgaW5kZXggPSBsaXN0ZW5lckFycmF5LmluZGV4T2YobGlzdGVuZXIpO1xuICAgICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgICBsaXN0ZW5lckFycmF5LnNwbGljZShpbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIC8qKlxuICAgICAgKiBGaXJlIGFuIGV2ZW50IHR5cGUuXG4gICAgICAqIEBwYXJhbSBldmVudCBUaGUgZXZlbnQgdGhhdCBnZXRzIGZpcmVkLlxuICAgICAgKi9cbiAgZGlzcGF0Y2hFdmVudChldmVudCkge1xuICAgIGlmICh0aGlzLl9saXN0ZW5lcnMgPT09IHZvaWQgMClcbiAgICAgIHJldHVybjtcbiAgICBjb25zdCBsaXN0ZW5lcnMgPSB0aGlzLl9saXN0ZW5lcnM7XG4gICAgY29uc3QgbGlzdGVuZXJBcnJheSA9IGxpc3RlbmVyc1tldmVudC50eXBlXTtcbiAgICBpZiAobGlzdGVuZXJBcnJheSAhPT0gdm9pZCAwKSB7XG4gICAgICBldmVudC50YXJnZXQgPSB0aGlzO1xuICAgICAgY29uc3QgYXJyYXkgPSBsaXN0ZW5lckFycmF5LnNsaWNlKDApO1xuICAgICAgZm9yIChsZXQgaSA9IDAsIGwgPSBhcnJheS5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgYXJyYXlbaV0uY2FsbCh0aGlzLCBldmVudCk7XG4gICAgICB9XG4gICAgICBldmVudC50YXJnZXQgPSBudWxsO1xuICAgIH1cbiAgfVxufVxuZXhwb3J0IHtcbiAgRXZlbnREaXNwYXRjaGVyXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RXZlbnREaXNwYXRjaGVyLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/three-stdlib/controls/EventDispatcher.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/three-stdlib/controls/TrackballControls.js":
/*!*****************************************************************!*\
  !*** ./node_modules/three-stdlib/controls/TrackballControls.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TrackballControls: () => (/* binding */ TrackballControls)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! three */ \"(ssr)/./node_modules/three/build/three.core.js\");\n/* harmony import */ var _EventDispatcher_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EventDispatcher.js */ \"(ssr)/./node_modules/three-stdlib/controls/EventDispatcher.js\");\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\n\nclass TrackballControls extends _EventDispatcher_js__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher {\n  constructor(object, domElement) {\n    super();\n    __publicField(this, \"enabled\", true);\n    __publicField(this, \"screen\", { left: 0, top: 0, width: 0, height: 0 });\n    __publicField(this, \"rotateSpeed\", 1);\n    __publicField(this, \"zoomSpeed\", 1.2);\n    __publicField(this, \"panSpeed\", 0.3);\n    __publicField(this, \"noRotate\", false);\n    __publicField(this, \"noZoom\", false);\n    __publicField(this, \"noPan\", false);\n    __publicField(this, \"staticMoving\", false);\n    __publicField(this, \"dynamicDampingFactor\", 0.2);\n    __publicField(this, \"minDistance\", 0);\n    __publicField(this, \"maxDistance\", Infinity);\n    __publicField(this, \"keys\", [\n      \"KeyA\",\n      \"KeyS\",\n      \"KeyD\"\n      /*D*/\n    ]);\n    __publicField(this, \"mouseButtons\", {\n      LEFT: three__WEBPACK_IMPORTED_MODULE_1__.MOUSE.ROTATE,\n      MIDDLE: three__WEBPACK_IMPORTED_MODULE_1__.MOUSE.DOLLY,\n      RIGHT: three__WEBPACK_IMPORTED_MODULE_1__.MOUSE.PAN\n    });\n    __publicField(this, \"object\");\n    __publicField(this, \"domElement\");\n    __publicField(this, \"cursorZoom\", false);\n    __publicField(this, \"target\", new three__WEBPACK_IMPORTED_MODULE_1__.Vector3());\n    __publicField(this, \"mousePosition\", new three__WEBPACK_IMPORTED_MODULE_1__.Vector2());\n    // internals\n    __publicField(this, \"STATE\", {\n      NONE: -1,\n      ROTATE: 0,\n      ZOOM: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_ZOOM_PAN: 4\n    });\n    __publicField(this, \"EPS\", 1e-6);\n    __publicField(this, \"lastZoom\", 1);\n    __publicField(this, \"lastPosition\", new three__WEBPACK_IMPORTED_MODULE_1__.Vector3());\n    __publicField(this, \"cursorVector\", new three__WEBPACK_IMPORTED_MODULE_1__.Vector3());\n    __publicField(this, \"targetVector\", new three__WEBPACK_IMPORTED_MODULE_1__.Vector3());\n    __publicField(this, \"_state\", this.STATE.NONE);\n    __publicField(this, \"_keyState\", this.STATE.NONE);\n    __publicField(this, \"_eye\", new three__WEBPACK_IMPORTED_MODULE_1__.Vector3());\n    __publicField(this, \"_movePrev\", new three__WEBPACK_IMPORTED_MODULE_1__.Vector2());\n    __publicField(this, \"_moveCurr\", new three__WEBPACK_IMPORTED_MODULE_1__.Vector2());\n    __publicField(this, \"_lastAxis\", new three__WEBPACK_IMPORTED_MODULE_1__.Vector3());\n    __publicField(this, \"_lastAngle\", 0);\n    __publicField(this, \"_zoomStart\", new three__WEBPACK_IMPORTED_MODULE_1__.Vector2());\n    __publicField(this, \"_zoomEnd\", new three__WEBPACK_IMPORTED_MODULE_1__.Vector2());\n    __publicField(this, \"_touchZoomDistanceStart\", 0);\n    __publicField(this, \"_touchZoomDistanceEnd\", 0);\n    __publicField(this, \"_panStart\", new three__WEBPACK_IMPORTED_MODULE_1__.Vector2());\n    __publicField(this, \"_panEnd\", new three__WEBPACK_IMPORTED_MODULE_1__.Vector2());\n    __publicField(this, \"target0\");\n    __publicField(this, \"position0\");\n    __publicField(this, \"up0\");\n    __publicField(this, \"zoom0\");\n    // events\n    __publicField(this, \"changeEvent\", { type: \"change\" });\n    __publicField(this, \"startEvent\", { type: \"start\" });\n    __publicField(this, \"endEvent\", { type: \"end\" });\n    __publicField(this, \"onScreenVector\", new three__WEBPACK_IMPORTED_MODULE_1__.Vector2());\n    __publicField(this, \"getMouseOnScreen\", (pageX, pageY) => {\n      this.onScreenVector.set(\n        (pageX - this.screen.left) / this.screen.width,\n        (pageY - this.screen.top) / this.screen.height\n      );\n      return this.onScreenVector;\n    });\n    __publicField(this, \"onCircleVector\", new three__WEBPACK_IMPORTED_MODULE_1__.Vector2());\n    __publicField(this, \"getMouseOnCircle\", (pageX, pageY) => {\n      this.onCircleVector.set(\n        (pageX - this.screen.width * 0.5 - this.screen.left) / (this.screen.width * 0.5),\n        (this.screen.height + 2 * (this.screen.top - pageY)) / this.screen.width\n        // screen.width intentional\n      );\n      return this.onCircleVector;\n    });\n    __publicField(this, \"axis\", new three__WEBPACK_IMPORTED_MODULE_1__.Vector3());\n    __publicField(this, \"quaternion\", new three__WEBPACK_IMPORTED_MODULE_1__.Quaternion());\n    __publicField(this, \"eyeDirection\", new three__WEBPACK_IMPORTED_MODULE_1__.Vector3());\n    __publicField(this, \"objectUpDirection\", new three__WEBPACK_IMPORTED_MODULE_1__.Vector3());\n    __publicField(this, \"objectSidewaysDirection\", new three__WEBPACK_IMPORTED_MODULE_1__.Vector3());\n    __publicField(this, \"moveDirection\", new three__WEBPACK_IMPORTED_MODULE_1__.Vector3());\n    __publicField(this, \"angle\", 0);\n    __publicField(this, \"rotateCamera\", () => {\n      this.moveDirection.set(this._moveCurr.x - this._movePrev.x, this._moveCurr.y - this._movePrev.y, 0);\n      this.angle = this.moveDirection.length();\n      if (this.angle) {\n        this._eye.copy(this.object.position).sub(this.target);\n        this.eyeDirection.copy(this._eye).normalize();\n        this.objectUpDirection.copy(this.object.up).normalize();\n        this.objectSidewaysDirection.crossVectors(this.objectUpDirection, this.eyeDirection).normalize();\n        this.objectUpDirection.setLength(this._moveCurr.y - this._movePrev.y);\n        this.objectSidewaysDirection.setLength(this._moveCurr.x - this._movePrev.x);\n        this.moveDirection.copy(this.objectUpDirection.add(this.objectSidewaysDirection));\n        this.axis.crossVectors(this.moveDirection, this._eye).normalize();\n        this.angle *= this.rotateSpeed;\n        this.quaternion.setFromAxisAngle(this.axis, this.angle);\n        this._eye.applyQuaternion(this.quaternion);\n        this.object.up.applyQuaternion(this.quaternion);\n        this._lastAxis.copy(this.axis);\n        this._lastAngle = this.angle;\n      } else if (!this.staticMoving && this._lastAngle) {\n        this._lastAngle *= Math.sqrt(1 - this.dynamicDampingFactor);\n        this._eye.copy(this.object.position).sub(this.target);\n        this.quaternion.setFromAxisAngle(this._lastAxis, this._lastAngle);\n        this._eye.applyQuaternion(this.quaternion);\n        this.object.up.applyQuaternion(this.quaternion);\n      }\n      this._movePrev.copy(this._moveCurr);\n    });\n    __publicField(this, \"zoomCamera\", () => {\n      let factor;\n      if (this._state === this.STATE.TOUCH_ZOOM_PAN) {\n        factor = this._touchZoomDistanceStart / this._touchZoomDistanceEnd;\n        this._touchZoomDistanceStart = this._touchZoomDistanceEnd;\n        if (this.object.isPerspectiveCamera) {\n          this._eye.multiplyScalar(factor);\n        } else if (this.object.isOrthographicCamera) {\n          this.object.zoom /= factor;\n          this.object.updateProjectionMatrix();\n        } else {\n          console.warn(\"THREE.TrackballControls: Unsupported camera type\");\n        }\n      } else {\n        factor = 1 + (this._zoomEnd.y - this._zoomStart.y) * this.zoomSpeed;\n        if (Math.abs(factor - 1) > this.EPS && factor > 0) {\n          if (this.object.isPerspectiveCamera) {\n            if (factor > 1 && this._eye.length() >= this.maxDistance - this.EPS) {\n              factor = 1;\n            }\n            this._eye.multiplyScalar(factor);\n          } else if (this.object.isOrthographicCamera) {\n            if (factor > 1 && this.object.zoom < this.maxDistance * this.maxDistance) {\n              factor = 1;\n            }\n            this.object.zoom /= factor;\n          } else {\n            console.warn(\"THREE.TrackballControls: Unsupported camera type\");\n          }\n        }\n        if (this.staticMoving) {\n          this._zoomStart.copy(this._zoomEnd);\n        } else {\n          this._zoomStart.y += (this._zoomEnd.y - this._zoomStart.y) * this.dynamicDampingFactor;\n        }\n        if (this.cursorZoom) {\n          this.targetVector.copy(this.target).project(this.object);\n          let worldPos = this.cursorVector.set(this.mousePosition.x, this.mousePosition.y, this.targetVector.z).unproject(this.object);\n          this.target.lerpVectors(worldPos, this.target, factor);\n        }\n        if (this.object.isOrthographicCamera) {\n          this.object.updateProjectionMatrix();\n        }\n      }\n    });\n    __publicField(this, \"mouseChange\", new three__WEBPACK_IMPORTED_MODULE_1__.Vector2());\n    __publicField(this, \"objectUp\", new three__WEBPACK_IMPORTED_MODULE_1__.Vector3());\n    __publicField(this, \"pan\", new three__WEBPACK_IMPORTED_MODULE_1__.Vector3());\n    __publicField(this, \"panCamera\", () => {\n      if (!this.domElement)\n        return;\n      this.mouseChange.copy(this._panEnd).sub(this._panStart);\n      if (this.mouseChange.lengthSq() > this.EPS) {\n        if (this.object.isOrthographicCamera) {\n          const orthoObject = this.object;\n          const scale_x = (orthoObject.right - orthoObject.left) / this.object.zoom;\n          const scale_y = (orthoObject.top - orthoObject.bottom) / this.object.zoom;\n          this.mouseChange.x *= scale_x;\n          this.mouseChange.y *= scale_y;\n        } else {\n          this.mouseChange.multiplyScalar(this._eye.length() * this.panSpeed);\n        }\n        this.pan.copy(this._eye).cross(this.object.up).setLength(this.mouseChange.x);\n        this.pan.add(this.objectUp.copy(this.object.up).setLength(this.mouseChange.y));\n        this.object.position.add(this.pan);\n        this.target.add(this.pan);\n        if (this.staticMoving) {\n          this._panStart.copy(this._panEnd);\n        } else {\n          this._panStart.add(\n            this.mouseChange.subVectors(this._panEnd, this._panStart).multiplyScalar(this.dynamicDampingFactor)\n          );\n        }\n      }\n    });\n    __publicField(this, \"checkDistances\", () => {\n      if (!this.noZoom || !this.noPan) {\n        if (this._eye.lengthSq() > this.maxDistance * this.maxDistance) {\n          this.object.position.addVectors(this.target, this._eye.setLength(this.maxDistance));\n          this._zoomStart.copy(this._zoomEnd);\n        }\n        if (this._eye.lengthSq() < this.minDistance * this.minDistance) {\n          this.object.position.addVectors(this.target, this._eye.setLength(this.minDistance));\n          this._zoomStart.copy(this._zoomEnd);\n        }\n      }\n    });\n    __publicField(this, \"handleResize\", () => {\n      if (!this.domElement)\n        return;\n      const box = this.domElement.getBoundingClientRect();\n      const d = this.domElement.ownerDocument.documentElement;\n      this.screen.left = box.left + window.pageXOffset - d.clientLeft;\n      this.screen.top = box.top + window.pageYOffset - d.clientTop;\n      this.screen.width = box.width;\n      this.screen.height = box.height;\n    });\n    __publicField(this, \"update\", () => {\n      this._eye.subVectors(this.object.position, this.target);\n      if (!this.noRotate) {\n        this.rotateCamera();\n      }\n      if (!this.noZoom) {\n        this.zoomCamera();\n      }\n      if (!this.noPan) {\n        this.panCamera();\n      }\n      this.object.position.addVectors(this.target, this._eye);\n      if (this.object.isPerspectiveCamera) {\n        this.checkDistances();\n        this.object.lookAt(this.target);\n        if (this.lastPosition.distanceToSquared(this.object.position) > this.EPS) {\n          this.dispatchEvent(this.changeEvent);\n          this.lastPosition.copy(this.object.position);\n        }\n      } else if (this.object.isOrthographicCamera) {\n        this.object.lookAt(this.target);\n        if (this.lastPosition.distanceToSquared(this.object.position) > this.EPS || this.lastZoom !== this.object.zoom) {\n          this.dispatchEvent(this.changeEvent);\n          this.lastPosition.copy(this.object.position);\n          this.lastZoom = this.object.zoom;\n        }\n      } else {\n        console.warn(\"THREE.TrackballControls: Unsupported camera type\");\n      }\n    });\n    __publicField(this, \"reset\", () => {\n      this._state = this.STATE.NONE;\n      this._keyState = this.STATE.NONE;\n      this.target.copy(this.target0);\n      this.object.position.copy(this.position0);\n      this.object.up.copy(this.up0);\n      this.object.zoom = this.zoom0;\n      this.object.updateProjectionMatrix();\n      this._eye.subVectors(this.object.position, this.target);\n      this.object.lookAt(this.target);\n      this.dispatchEvent(this.changeEvent);\n      this.lastPosition.copy(this.object.position);\n      this.lastZoom = this.object.zoom;\n    });\n    __publicField(this, \"keydown\", (event) => {\n      if (this.enabled === false)\n        return;\n      window.removeEventListener(\"keydown\", this.keydown);\n      if (this._keyState !== this.STATE.NONE) {\n        return;\n      } else if (event.code === this.keys[this.STATE.ROTATE] && !this.noRotate) {\n        this._keyState = this.STATE.ROTATE;\n      } else if (event.code === this.keys[this.STATE.ZOOM] && !this.noZoom) {\n        this._keyState = this.STATE.ZOOM;\n      } else if (event.code === this.keys[this.STATE.PAN] && !this.noPan) {\n        this._keyState = this.STATE.PAN;\n      }\n    });\n    __publicField(this, \"onPointerDown\", (event) => {\n      if (this.enabled === false)\n        return;\n      switch (event.pointerType) {\n        case \"mouse\":\n        case \"pen\":\n          this.onMouseDown(event);\n          break;\n      }\n    });\n    __publicField(this, \"onPointerMove\", (event) => {\n      if (this.enabled === false)\n        return;\n      switch (event.pointerType) {\n        case \"mouse\":\n        case \"pen\":\n          this.onMouseMove(event);\n          break;\n      }\n    });\n    __publicField(this, \"onPointerUp\", (event) => {\n      if (this.enabled === false)\n        return;\n      switch (event.pointerType) {\n        case \"mouse\":\n        case \"pen\":\n          this.onMouseUp();\n          break;\n      }\n    });\n    __publicField(this, \"keyup\", () => {\n      if (this.enabled === false)\n        return;\n      this._keyState = this.STATE.NONE;\n      window.addEventListener(\"keydown\", this.keydown);\n    });\n    __publicField(this, \"onMouseDown\", (event) => {\n      if (!this.domElement)\n        return;\n      if (this._state === this.STATE.NONE) {\n        switch (event.button) {\n          case this.mouseButtons.LEFT:\n            this._state = this.STATE.ROTATE;\n            break;\n          case this.mouseButtons.MIDDLE:\n            this._state = this.STATE.ZOOM;\n            break;\n          case this.mouseButtons.RIGHT:\n            this._state = this.STATE.PAN;\n            break;\n        }\n      }\n      const state = this._keyState !== this.STATE.NONE ? this._keyState : this._state;\n      if (state === this.STATE.ROTATE && !this.noRotate) {\n        this._moveCurr.copy(this.getMouseOnCircle(event.pageX, event.pageY));\n        this._movePrev.copy(this._moveCurr);\n      } else if (state === this.STATE.ZOOM && !this.noZoom) {\n        this._zoomStart.copy(this.getMouseOnScreen(event.pageX, event.pageY));\n        this._zoomEnd.copy(this._zoomStart);\n      } else if (state === this.STATE.PAN && !this.noPan) {\n        this._panStart.copy(this.getMouseOnScreen(event.pageX, event.pageY));\n        this._panEnd.copy(this._panStart);\n      }\n      this.domElement.ownerDocument.addEventListener(\"pointermove\", this.onPointerMove);\n      this.domElement.ownerDocument.addEventListener(\"pointerup\", this.onPointerUp);\n      this.dispatchEvent(this.startEvent);\n    });\n    __publicField(this, \"onMouseMove\", (event) => {\n      if (this.enabled === false)\n        return;\n      const state = this._keyState !== this.STATE.NONE ? this._keyState : this._state;\n      if (state === this.STATE.ROTATE && !this.noRotate) {\n        this._movePrev.copy(this._moveCurr);\n        this._moveCurr.copy(this.getMouseOnCircle(event.pageX, event.pageY));\n      } else if (state === this.STATE.ZOOM && !this.noZoom) {\n        this._zoomEnd.copy(this.getMouseOnScreen(event.pageX, event.pageY));\n      } else if (state === this.STATE.PAN && !this.noPan) {\n        this._panEnd.copy(this.getMouseOnScreen(event.pageX, event.pageY));\n      }\n    });\n    __publicField(this, \"onMouseUp\", () => {\n      if (!this.domElement)\n        return;\n      if (this.enabled === false)\n        return;\n      this._state = this.STATE.NONE;\n      this.domElement.ownerDocument.removeEventListener(\"pointermove\", this.onPointerMove);\n      this.domElement.ownerDocument.removeEventListener(\"pointerup\", this.onPointerUp);\n      this.dispatchEvent(this.endEvent);\n    });\n    __publicField(this, \"mousewheel\", (event) => {\n      if (this.enabled === false)\n        return;\n      if (this.noZoom === true)\n        return;\n      event.preventDefault();\n      switch (event.deltaMode) {\n        case 2:\n          this._zoomStart.y -= event.deltaY * 0.025;\n          break;\n        case 1:\n          this._zoomStart.y -= event.deltaY * 0.01;\n          break;\n        default:\n          this._zoomStart.y -= event.deltaY * 25e-5;\n          break;\n      }\n      this.mousePosition.x = event.offsetX / this.screen.width * 2 - 1;\n      this.mousePosition.y = -(event.offsetY / this.screen.height) * 2 + 1;\n      this.dispatchEvent(this.startEvent);\n      this.dispatchEvent(this.endEvent);\n    });\n    __publicField(this, \"touchstart\", (event) => {\n      if (this.enabled === false)\n        return;\n      event.preventDefault();\n      switch (event.touches.length) {\n        case 1:\n          this._state = this.STATE.TOUCH_ROTATE;\n          this._moveCurr.copy(this.getMouseOnCircle(event.touches[0].pageX, event.touches[0].pageY));\n          this._movePrev.copy(this._moveCurr);\n          break;\n        default:\n          this._state = this.STATE.TOUCH_ZOOM_PAN;\n          const dx = event.touches[0].pageX - event.touches[1].pageX;\n          const dy = event.touches[0].pageY - event.touches[1].pageY;\n          this._touchZoomDistanceEnd = this._touchZoomDistanceStart = Math.sqrt(dx * dx + dy * dy);\n          const x = (event.touches[0].pageX + event.touches[1].pageX) / 2;\n          const y = (event.touches[0].pageY + event.touches[1].pageY) / 2;\n          this._panStart.copy(this.getMouseOnScreen(x, y));\n          this._panEnd.copy(this._panStart);\n          break;\n      }\n      this.dispatchEvent(this.startEvent);\n    });\n    __publicField(this, \"touchmove\", (event) => {\n      if (this.enabled === false)\n        return;\n      event.preventDefault();\n      switch (event.touches.length) {\n        case 1:\n          this._movePrev.copy(this._moveCurr);\n          this._moveCurr.copy(this.getMouseOnCircle(event.touches[0].pageX, event.touches[0].pageY));\n          break;\n        default:\n          const dx = event.touches[0].pageX - event.touches[1].pageX;\n          const dy = event.touches[0].pageY - event.touches[1].pageY;\n          this._touchZoomDistanceEnd = Math.sqrt(dx * dx + dy * dy);\n          const x = (event.touches[0].pageX + event.touches[1].pageX) / 2;\n          const y = (event.touches[0].pageY + event.touches[1].pageY) / 2;\n          this._panEnd.copy(this.getMouseOnScreen(x, y));\n          break;\n      }\n    });\n    __publicField(this, \"touchend\", (event) => {\n      if (this.enabled === false)\n        return;\n      switch (event.touches.length) {\n        case 0:\n          this._state = this.STATE.NONE;\n          break;\n        case 1:\n          this._state = this.STATE.TOUCH_ROTATE;\n          this._moveCurr.copy(this.getMouseOnCircle(event.touches[0].pageX, event.touches[0].pageY));\n          this._movePrev.copy(this._moveCurr);\n          break;\n      }\n      this.dispatchEvent(this.endEvent);\n    });\n    __publicField(this, \"contextmenu\", (event) => {\n      if (this.enabled === false)\n        return;\n      event.preventDefault();\n    });\n    // https://github.com/mrdoob/three.js/issues/20575\n    __publicField(this, \"connect\", (domElement) => {\n      if (domElement === document) {\n        console.error(\n          'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.'\n        );\n      }\n      this.domElement = domElement;\n      this.domElement.addEventListener(\"contextmenu\", this.contextmenu);\n      this.domElement.addEventListener(\"pointerdown\", this.onPointerDown);\n      this.domElement.addEventListener(\"wheel\", this.mousewheel);\n      this.domElement.addEventListener(\"touchstart\", this.touchstart);\n      this.domElement.addEventListener(\"touchend\", this.touchend);\n      this.domElement.addEventListener(\"touchmove\", this.touchmove);\n      this.domElement.ownerDocument.addEventListener(\"pointermove\", this.onPointerMove);\n      this.domElement.ownerDocument.addEventListener(\"pointerup\", this.onPointerUp);\n      window.addEventListener(\"keydown\", this.keydown);\n      window.addEventListener(\"keyup\", this.keyup);\n      this.handleResize();\n    });\n    __publicField(this, \"dispose\", () => {\n      if (!this.domElement)\n        return;\n      this.domElement.removeEventListener(\"contextmenu\", this.contextmenu);\n      this.domElement.removeEventListener(\"pointerdown\", this.onPointerDown);\n      this.domElement.removeEventListener(\"wheel\", this.mousewheel);\n      this.domElement.removeEventListener(\"touchstart\", this.touchstart);\n      this.domElement.removeEventListener(\"touchend\", this.touchend);\n      this.domElement.removeEventListener(\"touchmove\", this.touchmove);\n      this.domElement.ownerDocument.removeEventListener(\"pointermove\", this.onPointerMove);\n      this.domElement.ownerDocument.removeEventListener(\"pointerup\", this.onPointerUp);\n      window.removeEventListener(\"keydown\", this.keydown);\n      window.removeEventListener(\"keyup\", this.keyup);\n    });\n    this.object = object;\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.up0 = this.object.up.clone();\n    this.zoom0 = this.object.zoom;\n    if (domElement !== void 0)\n      this.connect(domElement);\n    this.update();\n  }\n}\n\n//# sourceMappingURL=TrackballControls.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/three-stdlib/controls/TrackballControls.js\n");

/***/ })

};
;